from PIL import Image, ImageEnhance, ImageDraw, ImageOps

import moon as moon


def circle_coords(x, y, d):
    x1 = x - (d/2)
    y1 = y - (d/2)
    x2 = x + (d/2)
    y2 = y + (d/2)
    return [x1, y1, x2, y2]


def draw_moon(width, moon_lit_per, moon_rot_deg, visible):

    if moon_lit_per > 50:
        moon_lit = (100 - moon_lit_per) / 100
    else:
        moon_lit = moon_lit_per / 100

    # Get the relative (moon to cresent) diameter
    crescent_diameter = moon.crescent_diameter(moon_lit)

    # Get the crescent circle and moon circle center to center distance
    crescent_distance = moon.crecesent_distance(moon_lit)

    print()
    print(f'crescent_diameter {round(crescent_diameter, 3)}d')
    print(f'crescent_distance {round(crescent_distance, 3)}d')

    bright_colour = 'yellow' if visible else 'gray'

    image = Image.new('RGBA', (width, width))
    draw = ImageDraw.Draw(image)
    draw.rectangle([0, 0, width, width], fill="black")

    if moon_lit_per > 50:
        draw.ellipse(circle_coords(width/2 - (width * crescent_distance),
                     width/2, crescent_diameter*width), fill=bright_colour)
        image = image.rotate(180)
    else:
        draw.ellipse(circle_coords(width/2, width/2, width), fill=bright_colour)
        draw.ellipse(circle_coords(width/2 - (width * crescent_distance),
                     width/2, crescent_diameter*width), fill='black')

    # Create a mask
    size = (width, width)
    mask = Image.new('L', size, 0)
    draw = ImageDraw.Draw(mask)
    draw.ellipse((0, 0) + size, fill=255)

    output = ImageOps.fit(image, mask.size, centering=(0.5, 0.5))
    output.putalpha(mask)

    return output.rotate(-moon_rot_deg + 90)
