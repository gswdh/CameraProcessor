#include "debug.h"

// Xilinx
#include "xparameters.h"
#include "xgpiops.h"
#include "xgpio.h"
#include "xil_printf.h"

// FreeRTOS
#include "FreeRTOS.h"
#include "task.h"

// Abstractions
#include "logging.h"
#include "sys.h"

#define LOG_TAG "DEBUG"

#define GPIO_FPGA_PORT_CHANNEL (0x01)

XGpio debug_port = {0};

TaskHandle_t debug_task_handle = {0};

void debug_init()
{
	// FPGA based GPIO
	XGpio_Initialize(&debug_port, XPAR_AXI_GPIO_1_DEVICE_ID);

	// All as outputs
	XGpio_SetDataDirection(&debug_port, GPIO_FPGA_PORT_CHANNEL, 0xFFFFFFFF);

	// Look for state changes
	xTaskCreate(debug_task, LOG_TAG, 1024, NULL, tskIDLE_PRIORITY, &debug_task_handle);
}

uint32_t debug_pl_get()
{
	return XGpio_DiscreteRead(&debug_port, GPIO_FPGA_PORT_CHANNEL);
}

void debug_task(void *params)
{
	uint32_t data_p = debug_pl_get();

	while (1)
	{
		uint32_t data = debug_pl_get();

		if(data != data_p)
		{
			data_p = data;

			//log_info(LOG_TAG, "%u\n", data);
		}

		bool rxf = (data & FPGA_DEBUG_RXF) ? 1 : 0;
		bool rdn = (data & FPGA_DEBUG_RDN) ? 1 : 0;
		bool txe = (data & FPGA_DEBUG_TXE) ? 1 : 0;
		bool wrn = (data & FPGA_DEBUG_WRN) ? 1 : 0;
		bool oen = (data & FPGA_DEBUG_OEN) ? 1 : 0;
		bool rxv = (data & FPGA_DEBUG_RXV) ? 1 : 0;

		log_info(LOG_TAG, "rxf=%u\trdn=%u\ttxe=%u\twrn=%u\toen=%u\trxv=%u\n", rxf, rdn, txe, wrn, oen, rxv);
		sys_delay_ms(10);
	}
}

