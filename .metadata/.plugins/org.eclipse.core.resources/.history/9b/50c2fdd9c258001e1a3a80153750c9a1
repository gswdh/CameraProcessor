#include "gpio.h"

// Xilinx
#include "xparameters.h"
#include "xgpiops.h"
#include "xil_printf.h"

// FreeRTOS
#include "FreeRTOS.h"
#include "task.h"

XGpioPs gpio_dev = {0};

TaskHandle_t gpio_task_handle = {0};

void gpio_init()
{
	// Do bank 500 first 
	XGpioPs_Config * gpio_config = XGpioPs_LookupConfig(XPAR_XGPIOPS_0_DEVICE_ID);
	XGpioPs_CfgInitialize(&gpio_dev, gpio_config, gpio_config->BaseAddr);
	XGpioPs_SetDirectionPin(&gpio_dev, BTN_TOPLEFT_PIN, 0x0);
	XGpioPs_SetDirectionPin(&gpio_dev, BTN_BTMRIGHT_PIN, 0x0);

	xTaskCreate(gpio_task, "GPIO Polling", 1024, NULL, tskIDLE_PRIORITY, &gpio_task_handle);
}

bool gpio_get(gpio_pins_t pin)
{
	return XGpioPs_ReadPin(&gpio_dev, (uint32_t)pin);
}

void gpio_set(gpio_pins_t pin, bool state)
{
	XGpioPs_WritePin(&gpio_dev, (uint32_t)pin, (uint32_t)state);
}

void gpio_task(void * params)
{
	uint32_t tick = xTaskGetTickCount();

	while(1)
	{
		if(xTaskGetTickCount() > (tick + 500))
		{
			tick = xTaskGetTickCount();

			xil_printf("TL = %u, BR = %u\n", gpio_get(BTN_TOPLEFT_PIN), gpio_get(BTN_BTMRIGHT_PIN));
		}
	}
}